package GUS::Model::SRes::OntologySynonym_Row;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!

use strict;
use GUS::Model::GusRow;

use vars qw (@ISA);
@ISA = qw (GUS::Model::GusRow);

sub setDefaultParams {
  my ($self) = @_;
  $self->setVersionable(1);
  $self->setUpdateable(1);
}

sub setOntologySynonymId {
  my($self,$value) = @_;
  $self->set("ontology_synonym_id",$value);
}

sub getOntologySynonymId {
    my($self) = @_;
  return $self->get("ontology_synonym_id");
}

sub setOntologyTermId {
  my($self,$value) = @_;
  $self->set("ontology_term_id",$value);
}

sub getOntologyTermId {
    my($self) = @_;
  return $self->get("ontology_term_id");
}

sub setOntologySynonym {
  my($self,$value) = @_;
  $self->set("ontology_synonym",$value);
}

sub getOntologySynonym {
    my($self) = @_;
  return $self->get("ontology_synonym");
}

sub setExternalDatabaseReleaseId {
  my($self,$value) = @_;
  $self->set("external_database_release_id",$value);
}

sub getExternalDatabaseReleaseId {
    my($self) = @_;
  return $self->get("external_database_release_id");
}

sub setSourceId {
  my($self,$value) = @_;
  $self->set("source_id",$value);
}

sub getSourceId {
    my($self) = @_;
  return $self->get("source_id");
}

sub setIsPreferred {
  my($self,$value) = @_;
  $self->set("is_preferred",$value);
}

sub getIsPreferred {
    my($self) = @_;
  return $self->get("is_preferred");
}

sub setDefinition {
  my($self,$value) = @_;
  $self->set("definition",$value);
}

sub getDefinition {
    my($self) = @_;
  return $self->get("definition");
}

sub setVariable {
  my($self,$value) = @_;
  $self->set("variable",$value);
}

sub getVariable {
    my($self) = @_;
  return $self->get("variable");
}

sub setDisplayOrder {
  my($self,$value) = @_;
  $self->set("display_order",$value);
}

sub getDisplayOrder {
    my($self) = @_;
  return $self->get("display_order");
}

sub setModificationDate {
  my($self,$value) = @_;
  $self->set("modification_date",$value);
}

sub getModificationDate {
    my($self) = @_;
  return $self->get("modification_date");
}

sub setUserRead {
  my($self,$value) = @_;
  $self->set("user_read",$value);
}

sub getUserRead {
    my($self) = @_;
  return $self->get("user_read");
}

sub setUserWrite {
  my($self,$value) = @_;
  $self->set("user_write",$value);
}

sub getUserWrite {
    my($self) = @_;
  return $self->get("user_write");
}

sub setGroupRead {
  my($self,$value) = @_;
  $self->set("group_read",$value);
}

sub getGroupRead {
    my($self) = @_;
  return $self->get("group_read");
}

sub setGroupWrite {
  my($self,$value) = @_;
  $self->set("group_write",$value);
}

sub getGroupWrite {
    my($self) = @_;
  return $self->get("group_write");
}

sub setOtherRead {
  my($self,$value) = @_;
  $self->set("other_read",$value);
}

sub getOtherRead {
    my($self) = @_;
  return $self->get("other_read");
}

sub setOtherWrite {
  my($self,$value) = @_;
  $self->set("other_write",$value);
}

sub getOtherWrite {
    my($self) = @_;
  return $self->get("other_write");
}

sub setRowUserId {
  my($self,$value) = @_;
  $self->set("row_user_id",$value);
}

sub getRowUserId {
    my($self) = @_;
  return $self->get("row_user_id");
}

sub setRowGroupId {
  my($self,$value) = @_;
  $self->set("row_group_id",$value);
}

sub getRowGroupId {
    my($self) = @_;
  return $self->get("row_group_id");
}

sub setRowProjectId {
  my($self,$value) = @_;
  $self->set("row_project_id",$value);
}

sub getRowProjectId {
    my($self) = @_;
  return $self->get("row_project_id");
}

sub setRowAlgInvocationId {
  my($self,$value) = @_;
  $self->set("row_alg_invocation_id",$value);
}

sub getRowAlgInvocationId {
    my($self) = @_;
  return $self->get("row_alg_invocation_id");
}

sub setAnnotationProperties {
  my($self,$value) = @_;
  $self->set("annotation_properties",$value);
}

sub getAnnotationProperties {
    my($self) = @_;
  return $self->get("annotation_properties");
}

sub setOrdinalValues {
  my($self,$value) = @_;
  $self->set("ordinal_values",$value);
}

sub getOrdinalValues {
    my($self) = @_;
  return $self->get("ordinal_values");
}

sub setPlural {
  my($self,$value) = @_;
  $self->set("plural",$value);
}

sub getPlural {
    my($self) = @_;
  return $self->get("plural");
}

1;
